# TheClock

В этом проекте я реализовал механические часы с будильником на С++ с использованием фреймворка WinForms
Далее будут объяснения, как это работает:

----------------------------------------
В файле Конструктора MyForm.h
----------------------------------------
Были добавлены объекты:
- PictureBox    - чтобы внутрь него поместить картинки часов, стрелок и т.д
- Label	        - чтобы использовать его как Заголовок, и как визуализацию цифровых часов
- Timer         - основной "счетчик" нашего времени
- NumericUpDown - установка будильника
- Button	- кнопки для смены темы и запуска/остановки будильника

P.S. Все исходные картинки лежат в папке "resources" и ее надо добавить в папку, где лежит проект "C:\Users\you\TheClock\x64\Debug\"

----------------------------------------
В файле MyForm.h
----------------------------------------

void InitializeComponent(void)
- Здесь происходит инициализация всех объектов, установка их размеров, цвета и положения, относительно формы

Далее я создаю глобальные переменные:
- t1 - текущее время
- t2 - время будильника
А также исходные картинки стрелок          - imageSecondHand, imageMinuteHand и imageHourHand
Инициирую переменную проигрывателя мелодии - MediaPlayer
И нулевые координаты стрелок xSecond,      - ySecond, xMinute, yMinute, xHour, yHour

----------------------------------------
ПРИ ЗАГРУЗКЕ ФОРМЫ в System::Void MyForm_Load()
----------------------------------------

Я получаю текущее время (t1) и определяю все глобальные переменные, поворачиваю стрелки в стартовое положение
(00:00) и обнуляю цифровые часы

----------------------------------------
ПРИ НАЖАТИИ НА КНОПКУ (старт/стоп) в System::Void button1_Click()
----------------------------------------

По тегу я определяю, в каком положении сейчас находится кнопка и в зависимости от этого делаю следующее:
Если 0 - СТАРТ, надо включить
- получаю установленное время без учета секунд
- корректирую установленное время (если подразумевается следующий день)
- изменяю флаг и текст кнопки (со СТАРТ на СТОП)
- убираю настройку времени будильника, чтобы не "сбить" конечное время

Если 1 - СТОП, надо остановить
- изменяю флаг и текст кнопки (со СТОП на СТАРТ)
- возвращаю настройку времени
- переустанавливаю конечное время на начало дня, чтобы будильник не сработал

----------------------------------------
ПРИ КАЖДОЙ ИТЕРАЦИИ ТАЙМЕРА в System::Void timer2_Tick()
----------------------------------------

При каждой итерации таймера:
1. я получаю новое время, на 1 секунду больше
2. обновляю цифровое время и стрелку, пока только всего того, что связано с секундами
3. я проверяю, изменились ли минуты, и если да -> п.2, но с минутами
4. п.3, но с часами
5. потом я проверяю на соответствие текущего времени с временем будильника и если да:
	- активирую приложение
	- вывожу уведомление с музыкой
	- возвращаю флаг кнопки (со СТОП на СТАРТ)
	- возвращаю настройку времени

----------------------------------------
А далее в:
- System::Void cbDarkTheme_CheckedChanged()
- System::Void cbLightTheme_CheckedChanged()
- System::Void button2_Click()
- System::Void button3_Click()

Идет настройка визуала (темна и светлая тема)

Где cbDarkTheme_CheckedChanged() и cbLightTheme_CheckedChanged() - смена темы, а
button2_Click() и button3_Click() 			     - замена иконки циферблата часов
